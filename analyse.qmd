---
title: "Analysis_Master"
format: html
---
## Master Analysis



```{r}
##Loading necessary items

#| echo: false
#| warning: false
library(repeatData)
library(readxl)
library(tidyverse)
library(gt)
library(lme4)
library(irr)
library(devtools)


data(final.data)
data("cycling.data")
data("session.data")
```

##Descriptive Statistics of the participants

```{r}
descript <- final.data %>% 
select(id, timepoint, test, period, sex, weight, height, age, vo2.kg, rel.vo2, vo2, watt) %>% 
  filter(period == 1, test == "max", timepoint == "pre", 
         !id %in% c(6,11, 20, 21, 25, 35, 37, 52, 53, 54, 56, 57)) %>% 
  mutate(bmi = weight/(height/100)^2) %>% 
  group_by() %>% 
 summarise(N = n(), 
            Age = paste(round(mean(age, na.rm = TRUE),2), 
                        round(sd(age, na.rm = TRUE),2), 
                        sep = " ± "),
            Weight = paste(round(mean(weight, na.rm = TRUE),2), 
                        round(sd(weight, na.rm = TRUE),2), 
                        sep = " ± "),
            BMI = paste(round(mean(bmi, na.rm = TRUE),2), 
                        round(sd(bmi, na.rm = TRUE),2), 
                        sep = " ± "),
           rel.VO2max = paste(round(mean(vo2.kg, na.rm = TRUE),2), 
                        round(sd(vo2.kg, na.rm = TRUE),2), 
                        sep = " ± "),
           VO2max = paste(round(mean(vo2, na.rm = TRUE),2), 
                        round(sd(vo2, na.rm = TRUE),2), 
                        sep = " ± "),
           Wmax = paste(round(mean(watt, na.rm = TRUE),2), 
                        round(sd(watt, na.rm = TRUE),2), 
                        sep = " ± ")) %>% 
 mutate(N = as.character(N)) %>% 
  pivot_longer(names_to = "variables",
               values_to = "values",
               cols = N:Wmax) %>% 
  mutate(
    variables = case_when(
      variables == "rel.VO2max" ~ "VO2max (ml/kg/min)",
      variables == "Weight" ~ "Body weight (kg)",
      variables == "VO2max" ~ "VO2max (ml/min)",
       variables == "Wmax" ~ "Wmax (watt)",
      variables == "Age" ~ "Age (years)",
      TRUE ~ variables))
 


descript.2 <- final.data %>% 
 select(id, timepoint, test, period, watt) %>% 
  filter(period == 1, test == "per", timepoint == "pre", 
         !id %in% c(6, 11, 20, 21, 25, 35, 37, 52, 53, 54, 56, 57)) %>% 
  group_by() %>% 
  summarise(
    variables = "15min avg (watt)",
    values = paste(round(mean(watt, na.rm = TRUE), 2), 
                   round(sd(watt, na.rm = TRUE), 2), 
                   sep = " ± "))


descript_combined <- rbind(descript, descript.2)
print(descript_combined)

gt(descript_combined) %>% 
cols_label(variables = "Variables",
           values = "Mean ± SD") %>% 
  tab_header(title = "Characteristics of the participants")
descript_combined
```


```{r}
base1 <- final.data %>% 
select(id, timepoint, test, period, sex, weight, height, age, vo2.kg, rel.vo2, vo2, watt) %>% 
  filter(period == 1, test == "max", timepoint == "pre", 
         !id %in% c(6,11, 20, 21, 25, 35, 37, 52, 53, 54, 56, 57)) %>% 
  mutate(bmi = weight/(height/100)^2) %>% 
  group_by() %>% 
 summarise( Weight = paste(round(mean(weight, na.rm = TRUE),2), 
                        round(sd(weight, na.rm = TRUE),2), 
                        sep = " ± "),
           rel.VO2max = paste(round(mean(vo2.kg, na.rm = TRUE),2), 
                        round(sd(vo2.kg, na.rm = TRUE),2), 
                        sep = " ± "),
           VO2max = paste(round(mean(vo2, na.rm = TRUE),2), 
                        round(sd(vo2, na.rm = TRUE),2), 
                        sep = " ± "),
           Wmax = paste(round(mean(watt, na.rm = TRUE),2), 
                        round(sd(watt, na.rm = TRUE),2), 
                        sep = " ± ")) %>% 
  pivot_longer(names_to = "variables",
               values_to = "values",
               cols = Weight:Wmax) %>% 
  print()
```




## Table showing the baseline stats from period 1 and 2
```{r}

base1_2 <- final.data %>% 
select(id, timepoint, test, period, sex, weight, vo2.kg, rel.vo2, vo2, watt) %>% 
  filter(period == 2, test == "max", timepoint == "pre", 
         !id %in% c(6,11, 20, 21, 25, 35, 37, 52, 53, 54, 56, 57)) %>% 
  group_by() %>% 
 summarise(Weight = paste(round(mean(weight, na.rm = TRUE),2), 
                        round(sd(weight, na.rm = TRUE),2), 
                        sep = " ± "),
           rel.VO2max = paste(round(mean(vo2.kg, na.rm = TRUE),2), 
                        round(sd(vo2.kg, na.rm = TRUE),2), 
                        sep = " ± "),
           VO2max = paste(round(mean(vo2, na.rm = TRUE),2), 
                        round(sd(vo2, na.rm = TRUE),2), 
                        sep = " ± "),
           Wmax = paste(round(mean(watt, na.rm = TRUE),2), 
                        round(sd(watt, na.rm = TRUE),2), 
                        sep = " ± ")) %>% 
  pivot_longer(names_to = "variables",
               values_to = "values",
               cols = Weight:Wmax)
  
merge <- base1 %>% 
right_join(base1_2, base1, 
               by = c("variables"))



```


## Testing to see differences in baseline P1 and P2
- Notater til meg selv: burde jeg egentlig bruke p-verdi? da er det jo en ulempe å ha mange mennesker
siden det lettere blir signifikant. 
- Hvilke andre måter kan. man eventuelt ta stilling til det?

```{r}
base_test <- final.data %>% 
select(id, timepoint, test, period, weight, vo2.kg, vo2, watt) %>% 
  filter(test == "max", timepoint == "pre", 
         !id %in% c(6,11, 20, 21, 25, 35, 37, 52, 53, 54, 56, 57)) %>% 
  pivot_wider(names_from = period,
              values_from = weight:watt) %>% 
print()

# Perform the paired t-tests and store the results
t_test_vo2 <- t.test(base_test$vo2_1, base_test$vo2_2, paired = TRUE)
t_test_weight <- t.test(base_test$weight_1, base_test$weight_2, paired = TRUE)
t_test_watt <- t.test(base_test$watt_1, base_test$watt_2, paired = TRUE)
t_test_vo2.kg <- t.test(base_test$vo2.kg_1, base_test$vo2.kg_2, paired = TRUE)

# Print the t-test results to check if they are correctly stored
print(t_test_vo2)
print(t_test_weight)
print(t_test_watt)
print(t_test_vo2.kg)

# Create the results data frame
results <- data.frame(
  variables = c("Weight", "rel.VO2max", "VO2max", "Wmax"),
  p_value = c(t_test_weight$p.value, t_test_vo2.kg$p.value, t_test_vo2$p.value, t_test_watt$p.value)) 

# Print the results data frame
print(results)
  
  
 
```

```{r}
merge.p <- merge %>% 
right_join(results, merge,
               by = c("variables"))%>%
  mutate(
    variables = case_when(
      variables == "rel.VO2max" ~ "VO2max (ml/kg/min)",
      variables == "Weight" ~ "Body weight (kg)",
      variables == "VO2max" ~ "VO2max (ml/min)",
       variables == "Wmax" ~ "Wmax (watt)",
      TRUE ~ variables)) %>% 
gt() %>% 
cols_label(variables = "Variables",
           values.x = "Period 1",
           values.y = "period 2",
           p_value = "P-Value") %>% 
  fmt_number(columns = c("p_value"),
    decimals = 4) %>% 
  tab_header(title = "Baseline Characteristics")
merge.p
```


##Test to calculate TE and CV on duplicate pre-measures on VO2max for reliability

```{r}

test <- cycling.data %>% 
  select(id, period, timepoint, test, vo2) %>% 
  filter(test == "max", (timepoint == 2 | timepoint == 3), period == 1) %>% 
  select(id, timepoint, vo2) %>% 
  pivot_wider(names_from = timepoint, values_from = vo2, names_prefix = "timepoint_", values_fn = list(vo2 = mean)) %>% 
  mutate(diff = timepoint_3 - timepoint_2) %>% 
  summarise (mean_diff = mean(diff, na.rm = TRUE),
             mean = mean(c(timepoint_2, timepoint_3),na.rm = T),
             sd_diff = sd(diff, na.rm = TRUE),
             te = sd_diff / sqrt(2),
             cv = (te / mean) * 100)
  
```

##calculate Mixed Effects Model for VO2max
```{r}

### Model to check Group differences between the two periods

mixed_vo2 <- final.data %>% 
  select(id, period, timepoint, test, vo2) %>% 
  filter(test == "max", 
         !id %in% c(6,11, 20, 21, 25, 35, 37, 52, 53, 54, 56, 57)) %>%  
  pivot_wider(names_from = timepoint, values_from = vo2) %>% 
  pivot_longer(cols = c(pre, post), names_to = "timepoint", values_to = "vo2") %>% 
  print()
  
#Build to Model. Including all timepoints (Might include both Pre-timepoints)
   
  model.vo2 <- lmer(vo2 ~ period * timepoint + (1 + period | id), data = mixed_vo2)
summary(model.vo2)
  ci.vo2 <- confint(model.vo2, level = 0.95)
  print(ci.vo2)
  
# Extract residuals
residuals.vo2 <- resid(model.vo2)

# Summarize residuals
summary(residuals.vo2)

# Plot residuals for visualization
plot(residuals.vo2, main = "Residual Plot", xlab = "Fitted Values", ylab = "Residuals") %>% 
abline(h = 0, col = "red", lty = 2) # Add a horizontal line at zero for reference

  
```



```{r}

## Model a LMM that i can use to calculate ICC

mixed_vo2.2 <- final.data %>% 
select(id, period, timepoint, test, vo2) %>% 
  filter(test == "max", 
         !id %in% c(6,11, 20, 21, 25, 35, 37, 52, 53, 54, 56, 57),
         !period %in% (3)) %>% 
  pivot_wider(names_from = timepoint, values_from = vo2) %>% 
  mutate(change = post - pre) %>% 
  print()
  
  #Build to Model
   
  model.vo2.2 <- lmer(change ~ period + (1 | id), data = mixed_vo2.2)
  summary(model.vo2.2)
  
  ## Create a function that i can use to calculate ICC from the model above
## ICC
  icc_fun <- function(x) {
    
    data.frame(VarCorr(x))[1,4] / sum(data.frame(VarCorr(x))[,4])
    
    }

##Calculate the ICC from the function above.
  
icc_fun(model.vo2.2)

## Calculate confident intervall from the ICC

bo <- bootMer(model.vo2.2, icc_fun, nsim = 1000)

quantile(bo$t, c(0.025, 0.975))

ggplot(mixed_vo2.2, aes(x = period, y = change)) +
  geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2, notch = FALSE) +
  geom_jitter(shape = 16, position = position_jitter(0.2), alpha = 0.6) +
  labs(title = "Distribution of Change in Watt by Period",
       x = "Period",
       y = "Change in Watt") +
  theme_minimal()

```


## Pearsons Correlation - Mest sansynlig ikke noe jeg kommer til å bruke.

```{r}
pear.vo2 <- final.data %>% 
  select(id, period, timepoint, test, vo2) %>% 
  filter(test == "max", 
         !id %in% c(6,11, 20, 21, 25, 35, 37, 52, 53, 54, 56, 57)) %>% 
  pivot_wider(names_from = timepoint, values_from = vo2) %>% 
  mutate(change = post - pre) %>% 
  select(id, period, change) %>%
  pivot_wider(names_from = period, values_from = change) %>% 
  print()

cor.vo2 <- cor(pear.vo2$"1", pear.vo2$"2")
print(cor.vo2)
  
```


#WMAX

```{r}
## Model a LMM that i can use to calculate ICC

mixed_wmax <- final.data %>% 
select(id, period, timepoint, test, watt) %>% 
  filter(test == "max", 
         !id %in% c(6,11, 20, 21, 25, 35, 37, 52, 53, 54, 56, 57)) %>% 
  pivot_wider(names_from = timepoint, values_from = watt) %>% 
  mutate(change = post - pre) %>% 
  print()
  
  #Build to Model
   
  model.wmax <- lmer(change ~ period + (1 | id), data = mixed_wmax)
  summary(model.wmax)
  
##Calculate the ICC from the function above.
  
icc_fun(model.wmax)

## Calculate confident intervall from the ICC

bo <- bootMer(model.wmax, icc_fun, nsim = 1000)

quantile(bo$t, c(0.025, 0.975))

ggplot(mixed_wmax, aes(x = period, y = change, group = id, color = as.factor(id))) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  labs(title = "Individual Changes in Watt by Period",
       x = "Period",
       y = "Change in Watt") +
  theme_minimal() +
  theme(legend.position = "none")

```


```{r}
### Model to check Group differences between the two periods

mixed_wmax.2 <- final.data %>% 
  select(id, period, timepoint, test, watt) %>% 
  filter(test == "max", 
         !id %in% c(6,11, 20, 21, 25, 35, 37, 52, 53, 54, 56, 57)) %>%  
  pivot_wider(names_from = timepoint, values_from = watt) %>% 
  pivot_longer(cols = c(pre, post), names_to = "timepoint", values_to = "watt") %>% 
  mutate(timepoint_inv = ifelse(timepoint == "pre", "post", "pre")) %>% 
  print()
  
#Build to Model. Including all timepoints (Might include both Pre-timepoints)
   
  model.wmax.2 <- lmer(watt ~ period * timepoint_inv + (1 + period | id), data = mixed_wmax.2)
summary(model.wmax.2)
  ci.wmax <- confint(model.wmax.2, level = 0.95)
  print(ci.wmax)
  
# Extract residuals
residuals.wmax <- resid(model.wmax.2)

# Summarize residuals
summary(residuals.wmax)
```



# W 15 min


```{r}
mixed_w15 <- final.data %>% 
select(id, period, timepoint, test, watt) %>% 
  filter(test == "per", 
         !id %in% c(6,11, 20, 21, 25, 35, 37, 52, 53, 54, 56, 57)) %>% 
  pivot_wider(names_from = timepoint, values_from = watt) %>% 
  mutate(change = post - pre) %>% 
  print()
  
  #Build to Model
   
  model.w15 <- lmer(change ~ period + (1 | id), data = mixed_w15)
  summary(model.w15)
  ci.w15 <- confint(model.w15, level = 0.95)
  print(ci.w15)
  
##Calculate the ICC from the function above.
  
icc_fun(model.w15)

## Calculate confident intervall from the ICC

bo <- bootMer(model.w15, icc_fun, nsim = 1000)

quantile(bo$t, c(0.025, 0.975))



ggplot(mixed_w15, aes(x = period, y = change)) +
  geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2, notch = FALSE) +
  geom_jitter(shape = 16, position = position_jitter(0.2), alpha = 0.6) +
  labs(title = "Distribution of Change in Watt by Period",
       x = "Period",
       y = "Change in Watt") +
  theme_minimal()
```





## BASELINE

```{r}
baseline_w15 <- final.data %>% 
select(id, period, timepoint, test, watt) %>% 
  filter(test == "per", 
         timepoint == "pre",  
         !id %in% c(6,11, 20, 21, 25, 35, 37, 52, 53, 54, 56, 57)) %>%
  pivot_wider(names_from = timepoint, values_from = watt) %>% 
  rename(watt = pre) %>% 
  print()
  
  #Build to Model
   
  model.base.w15 <- lmer(watt ~ period + (1 | id), data = baseline_w15)
  summary(model.base.w15)
  
##Calculate the ICC from the function above.
  
icc_fun(model.base.w15)

## Calculate confident intervall from the ICC

bo <- bootMer(model.base.w15, icc_fun, nsim = 1000)

quantile(bo$t, c(0.025, 0.975))

ggplot(baseline_w15, aes(x = period, y = watt, group = id, color = as.factor(id))) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  labs(title = "Individual Changes in Watt by Period",
       x = "Period",
       y = "Change in Watt") +
  theme_minimal() +
  theme(legend.position = "none")
```





## alternativ måte å gjøre LMEM - med begge pre-testene.

```{r}
mixed_wmax.2 <- cycling.data %>% 
select(id, period, timepoint, test, watt) %>% 
filter(test == "max" & 
         ((!id %in% c(6, 11, 20, 21, 25, 35, 37, 52, 53, 54, 56, 57)) & 
          ((period == 1 & timepoint %in% c("2", "3", "7")) | 
           (period == 2 & timepoint %in% c("1", "2", "3"))))) %>% 
 mutate(mapped_timepoint = case_when(
    period == 1 & timepoint %in% c("2", "3") ~ "pre",
    period == 1 & timepoint == "7" ~ "post",
    period == 2 & timepoint %in% c("1", "2") ~ "pre",
    period == 2 & timepoint == "3" ~ "post",
    TRUE ~ timepoint  # Fallback in case of unexpected values
  )) %>% 
  select(id, period, mapped_timepoint, test, watt) %>%
print()


model.wmax.3 <- lmer(watt ~ period * mapped_timepoint + (1 + period + mapped_timepoint | id), data = mixed_wmax.2)
summary(model.wmax.3)
  
  
```



##Bergene TE og CV av VO2max
```{r}
rel.vo2 <- final.data %>% 
  select(id, period, timepoint, test, vo2) %>% 
  filter(test == "max",
         !id %in% c(6, 11, 20, 21, 25, 35, 37, 52, 53, 54, 56, 57),
         !period %in% 3) %>%
  pivot_wider(names_from = timepoint, values_from = vo2, names_prefix = "timepoint_") %>% 
  mutate(diff = timepoint_post - timepoint_pre) %>% 
  select(id, period, diff) %>% 
  pivot_wider(names_from = period, values_from = diff, names_prefix = "period_") %>% 
  mutate(diff = period_2 - period_1) %>% 
  group_by() %>% 
  summarise(mean_diff = mean(diff, na.rm = TRUE),
             mean = mean(c(period_1, period_2),na.rm = T),
             sd_diff = sd(diff, na.rm = TRUE),
             te = sd_diff / sqrt(2),
             cv = (te / mean) * 100) %>%
  print()
```





## Compare session-data between period 1 and 2
```{r}

session <- session.data %>% 
  filter(!id %in% c(6, 11, 20, 21, 25, 35, 37, 52, 53, 54, 56, 57),
         type == c("4x5", "4x8", "6x6")) %>%
  pivot_wider(names_from = period, values_from = ftp:rpe) %>% 
  summarise(
   ftp_1_mean = round(mean(ftp_1, na.rm = TRUE)),
  hr_1_mean = round(mean(hr_1, na.rm = TRUE)),
  watt_1_mean = round(mean(watt_1, na.rm = TRUE)),
  rpe_1_mean = round(mean(rpe_1, na.rm = TRUE)),
  ftp_2_mean = round(mean(ftp_2, na.rm = TRUE)),
  hr_2_mean = round(mean(hr_2, na.rm = TRUE)),
  watt_2_mean = round(mean(watt_2, na.rm = TRUE)),
  rpe_2_mean = round(mean(rpe_2, na.rm = TRUE))) %>%
  pivot_longer(
    cols = starts_with("ftp_1_"):starts_with("rpe_2_"),
    names_to = c(".value", "period"),
    names_sep = "_") %>%
pivot_longer(names_to = "variables", values_to = "values", cols = ftp:rpe) %>% 
  pivot_wider(names_from = period, values_from = values, names_prefix = "period_") %>% 
  print()


session.type <- session.data %>% 
  select(id, period, session.n, type) %>% 
  filter(!id %in% c(6, 11, 20, 21, 25, 35, 37, 52, 53, 54, 56, 57)) %>% 
  group_by(period, type) %>%
  summarize(count = n(), .groups = 'drop') %>%
  filter(!is.na(type)) %>% 
  pivot_wider(names_from = period, values_from = count, names_prefix = "period_") %>% 
 mutate(
    mean_n_p1 = round(period_1 / 42),
    mean_n_p2 = round(period_2 / 42)) %>% 
  select(type, mean_n_p1, mean_n_p2) %>% 
  print()


```


Test workout similarity with mixed model and ICC

```{r}
session.test.watt <- session.data %>% 
  filter(!id %in% c(6, 11, 20, 21, 25, 35, 37, 52, 53, 54, 56, 57),
         type == c("4x5", "4x8", "6x6")) %>%
  pivot_wider(names_from = period, values_from = ftp:rpe) %>% 
  group_by(id) %>% 
  summarize(mean_watt_1 = mean(watt_1, na.rm=T),
            mean_watt_2 = mean(watt_2, na.rm=T)) %>%
  pivot_longer(cols = starts_with("mean_watt"),
               names_to = "test",
               values_to = "watt") %>%
  mutate(period = if_else(test == "mean_watt_1", "1", "2")) %>%
  select(id, period, test, watt) %>% 
  print()
  model.sess.watt <- lmer(watt ~ period + (1 | id), data = session.test.watt)
  summary(model.sess.watt) 
    
    icc_fun(model.sess.watt)

## Calculate confident intervall from the ICC

bo.sess.ftp <- bootMer(model.sess.ftp, icc_fun, nsim = 1000)

quantile(bo.sess.ftp$t, c(0.025, 0.975))

```






